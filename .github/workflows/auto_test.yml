name: test

on:
  push:
    branches:
      - "**"
      - "!develop"
      - "!main"
  pull_request:
    types:
      - opened
      - edited
    branches:
      - "develop"

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: ./docker/test
    env:
      DOCKER_ENV_FILE: .env
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker image build and push
        uses: docker/build-push-action@v5
        with:
          context: ../../
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/${{ vars.DOCKER_IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Create env file for containers
        run: |
          touch $DOCKER_ENV_FILE
          cat <<EOF > $DOCKER_ENV_FILE
          COMPOSE_PROJECT_NAME=${{vars.COMPOSE_PROJECT_NAME}}
          APP_PORT=${{secrets.APP_PORT}}
          DB_HOST=${{secrets.DB_HOST}}
          DB_PORT=${{secrets.DB_PORT}}
          POSTGRES_DB=${{secrets.POSTGRES_DB}}
          POSTGRES_USER=${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}
          LINE_TOKEN=${{secrets.LINE_TOKEN}}
          LINE_SECRET=${{secrets.LINE_SECRET}}
          LOG_FOLDER=${{secrets.LOG_FOLDER}}
          CORS_ALLOW_ORIGIN=${{secrets.CORS_ALLOW_ORIGIN}}
          EOF
      - name: Check if .env file exists
        run: |
          if [ ! -f $DOCKER_ENV_FILE ]; then
            echo "$DOCKER_ENV_FILE is not found"
            exit 1
          elif [ ! -s $DOCKER_ENV_FILE ]; then
            echo "$DOCKER_ENV_FILE is empty"
            exit 1
          fi
      # docker composeでなく docker-composeを使わなといけない。
      # https://github.com/actions/runner-images/issues/5022#issuecomment-1030025608
      - name: Create docker containers
        run: |
          docker compose up -d
      - name: Execute maven test
        run: |
          docker compose exec -it app /bin/bash
          ./mvnw test
